//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrylDesktop.CrylService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/CrylService.Dominio")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodCliente {
            get {
                return this.CodClienteField;
            }
            set {
                if ((this.CodClienteField.Equals(value) != true)) {
                    this.CodClienteField = value;
                    this.RaisePropertyChanged("CodCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Dni {
            get {
                return this.DniField;
            }
            set {
                if ((this.DniField.Equals(value) != true)) {
                    this.DniField = value;
                    this.RaisePropertyChanged("Dni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((object.ReferenceEquals(this.SexoField, value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((this.TelefonoField.Equals(value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Empleado", Namespace="http://schemas.datacontract.org/2004/07/CrylService.Dominio")]
    [System.SerializableAttribute()]
    public partial class Empleado : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CargoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EdadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cargo {
            get {
                return this.CargoField;
            }
            set {
                if ((object.ReferenceEquals(this.CargoField, value) != true)) {
                    this.CargoField = value;
                    this.RaisePropertyChanged("Cargo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodEmpleado {
            get {
                return this.CodEmpleadoField;
            }
            set {
                if ((this.CodEmpleadoField.Equals(value) != true)) {
                    this.CodEmpleadoField = value;
                    this.RaisePropertyChanged("CodEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Dni {
            get {
                return this.DniField;
            }
            set {
                if ((this.DniField.Equals(value) != true)) {
                    this.DniField = value;
                    this.RaisePropertyChanged("Dni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Edad {
            get {
                return this.EdadField;
            }
            set {
                if ((this.EdadField.Equals(value) != true)) {
                    this.EdadField = value;
                    this.RaisePropertyChanged("Edad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((object.ReferenceEquals(this.SexoField, value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((this.TelefonoField.Equals(value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Medicamento", Namespace="http://schemas.datacontract.org/2004/07/CrylService.Dominio")]
    [System.SerializableAttribute()]
    public partial class Medicamento : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodMedicamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreMedicamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PrecioUnidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnidadesEnExistenciaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodMedicamento {
            get {
                return this.CodMedicamentoField;
            }
            set {
                if ((this.CodMedicamentoField.Equals(value) != true)) {
                    this.CodMedicamentoField = value;
                    this.RaisePropertyChanged("CodMedicamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreMedicamento {
            get {
                return this.NombreMedicamentoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreMedicamentoField, value) != true)) {
                    this.NombreMedicamentoField = value;
                    this.RaisePropertyChanged("NombreMedicamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PrecioUnidad {
            get {
                return this.PrecioUnidadField;
            }
            set {
                if ((this.PrecioUnidadField.Equals(value) != true)) {
                    this.PrecioUnidadField = value;
                    this.RaisePropertyChanged("PrecioUnidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnidadesEnExistencia {
            get {
                return this.UnidadesEnExistenciaField;
            }
            set {
                if ((this.UnidadesEnExistenciaField.Equals(value) != true)) {
                    this.UnidadesEnExistenciaField = value;
                    this.RaisePropertyChanged("UnidadesEnExistencia");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pedido", Namespace="http://schemas.datacontract.org/2004/07/CrylService.Dominio")]
    [System.SerializableAttribute()]
    public partial class Pedido : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CrylDesktop.CrylService.Cliente ClienField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionDestinatarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CrylDesktop.CrylService.Empleado EmpleaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaEntregaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaPedidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NroPedidoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CrylDesktop.CrylService.Cliente Clien {
            get {
                return this.ClienField;
            }
            set {
                if ((object.ReferenceEquals(this.ClienField, value) != true)) {
                    this.ClienField = value;
                    this.RaisePropertyChanged("Clien");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DireccionDestinatario {
            get {
                return this.DireccionDestinatarioField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionDestinatarioField, value) != true)) {
                    this.DireccionDestinatarioField = value;
                    this.RaisePropertyChanged("DireccionDestinatario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CrylDesktop.CrylService.Empleado Emplea {
            get {
                return this.EmpleaField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpleaField, value) != true)) {
                    this.EmpleaField = value;
                    this.RaisePropertyChanged("Emplea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaEntrega {
            get {
                return this.FechaEntregaField;
            }
            set {
                if ((this.FechaEntregaField.Equals(value) != true)) {
                    this.FechaEntregaField = value;
                    this.RaisePropertyChanged("FechaEntrega");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaPedido {
            get {
                return this.FechaPedidoField;
            }
            set {
                if ((this.FechaPedidoField.Equals(value) != true)) {
                    this.FechaPedidoField = value;
                    this.RaisePropertyChanged("FechaPedido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NroPedido {
            get {
                return this.NroPedidoField;
            }
            set {
                if ((object.ReferenceEquals(this.NroPedidoField, value) != true)) {
                    this.NroPedidoField = value;
                    this.RaisePropertyChanged("NroPedido");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetallePedido", Namespace="http://schemas.datacontract.org/2004/07/CrylService.Dominio")]
    [System.SerializableAttribute()]
    public partial class DetallePedido : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CantidadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DescuentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacturaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CrylDesktop.CrylService.Medicamento MedicamenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CrylDesktop.CrylService.Pedido PediField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cantidad {
            get {
                return this.CantidadField;
            }
            set {
                if ((this.CantidadField.Equals(value) != true)) {
                    this.CantidadField = value;
                    this.RaisePropertyChanged("Cantidad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Descuento {
            get {
                return this.DescuentoField;
            }
            set {
                if ((this.DescuentoField.Equals(value) != true)) {
                    this.DescuentoField = value;
                    this.RaisePropertyChanged("Descuento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Factura {
            get {
                return this.FacturaField;
            }
            set {
                if ((this.FacturaField.Equals(value) != true)) {
                    this.FacturaField = value;
                    this.RaisePropertyChanged("Factura");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CrylDesktop.CrylService.Medicamento Medicamen {
            get {
                return this.MedicamenField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicamenField, value) != true)) {
                    this.MedicamenField = value;
                    this.RaisePropertyChanged("Medicamen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CrylDesktop.CrylService.Pedido Pedi {
            get {
                return this.PediField;
            }
            set {
                if ((object.ReferenceEquals(this.PediField, value) != true)) {
                    this.PediField = value;
                    this.RaisePropertyChanged("Pedi");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CrylService.ITransaccion")]
    public interface ITransaccion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearCliente", ReplyAction="http://tempuri.org/ITransaccion/CrearClienteResponse")]
        CrylDesktop.CrylService.Cliente CrearCliente(CrylDesktop.CrylService.Cliente nuevoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearCliente", ReplyAction="http://tempuri.org/ITransaccion/CrearClienteResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> CrearClienteAsync(CrylDesktop.CrylService.Cliente nuevoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarCliente", ReplyAction="http://tempuri.org/ITransaccion/ListarClienteResponse")]
        CrylDesktop.CrylService.Cliente[] ListarCliente();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarCliente", ReplyAction="http://tempuri.org/ITransaccion/ListarClienteResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente[]> ListarClienteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ModificarCliente", ReplyAction="http://tempuri.org/ITransaccion/ModificarClienteResponse")]
        CrylDesktop.CrylService.Cliente ModificarCliente(CrylDesktop.CrylService.Cliente clienteModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ModificarCliente", ReplyAction="http://tempuri.org/ITransaccion/ModificarClienteResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> ModificarClienteAsync(CrylDesktop.CrylService.Cliente clienteModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerCliente", ReplyAction="http://tempuri.org/ITransaccion/ObtenerClienteResponse")]
        CrylDesktop.CrylService.Cliente ObtenerCliente(int CodCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerCliente", ReplyAction="http://tempuri.org/ITransaccion/ObtenerClienteResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> ObtenerClienteAsync(int CodCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/BuscarCliente", ReplyAction="http://tempuri.org/ITransaccion/BuscarClienteResponse")]
        CrylDesktop.CrylService.Cliente BuscarCliente(CrylDesktop.CrylService.Cliente clien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/BuscarCliente", ReplyAction="http://tempuri.org/ITransaccion/BuscarClienteResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> BuscarClienteAsync(CrylDesktop.CrylService.Cliente clien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/IniciarSesion", ReplyAction="http://tempuri.org/ITransaccion/IniciarSesionResponse")]
        bool IniciarSesion(CrylDesktop.CrylService.Cliente clien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/IniciarSesion", ReplyAction="http://tempuri.org/ITransaccion/IniciarSesionResponse")]
        System.Threading.Tasks.Task<bool> IniciarSesionAsync(CrylDesktop.CrylService.Cliente clien);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearEmpleado", ReplyAction="http://tempuri.org/ITransaccion/CrearEmpleadoResponse")]
        CrylDesktop.CrylService.Empleado CrearEmpleado(CrylDesktop.CrylService.Empleado nuevoEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearEmpleado", ReplyAction="http://tempuri.org/ITransaccion/CrearEmpleadoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado> CrearEmpleadoAsync(CrylDesktop.CrylService.Empleado nuevoEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarEmpleado", ReplyAction="http://tempuri.org/ITransaccion/ListarEmpleadoResponse")]
        CrylDesktop.CrylService.Empleado[] ListarEmpleado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarEmpleado", ReplyAction="http://tempuri.org/ITransaccion/ListarEmpleadoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado[]> ListarEmpleadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ModificarEmpleado", ReplyAction="http://tempuri.org/ITransaccion/ModificarEmpleadoResponse")]
        CrylDesktop.CrylService.Empleado ModificarEmpleado(CrylDesktop.CrylService.Empleado empleadoModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ModificarEmpleado", ReplyAction="http://tempuri.org/ITransaccion/ModificarEmpleadoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado> ModificarEmpleadoAsync(CrylDesktop.CrylService.Empleado empleadoModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerEmpleado", ReplyAction="http://tempuri.org/ITransaccion/ObtenerEmpleadoResponse")]
        CrylDesktop.CrylService.Empleado ObtenerEmpleado(int CodEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerEmpleado", ReplyAction="http://tempuri.org/ITransaccion/ObtenerEmpleadoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado> ObtenerEmpleadoAsync(int CodEmpleado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearMedicamento", ReplyAction="http://tempuri.org/ITransaccion/CrearMedicamentoResponse")]
        CrylDesktop.CrylService.Medicamento CrearMedicamento(CrylDesktop.CrylService.Medicamento nuevoMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearMedicamento", ReplyAction="http://tempuri.org/ITransaccion/CrearMedicamentoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> CrearMedicamentoAsync(CrylDesktop.CrylService.Medicamento nuevoMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarMedicamento", ReplyAction="http://tempuri.org/ITransaccion/ListarMedicamentoResponse")]
        CrylDesktop.CrylService.Medicamento[] ListarMedicamento();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarMedicamento", ReplyAction="http://tempuri.org/ITransaccion/ListarMedicamentoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento[]> ListarMedicamentoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ModificarMedicamento", ReplyAction="http://tempuri.org/ITransaccion/ModificarMedicamentoResponse")]
        CrylDesktop.CrylService.Medicamento ModificarMedicamento(CrylDesktop.CrylService.Medicamento medicamentoModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ModificarMedicamento", ReplyAction="http://tempuri.org/ITransaccion/ModificarMedicamentoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> ModificarMedicamentoAsync(CrylDesktop.CrylService.Medicamento medicamentoModificar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarUnidadesxMedicamento", ReplyAction="http://tempuri.org/ITransaccion/ListarUnidadesxMedicamentoResponse")]
        CrylDesktop.CrylService.Medicamento ListarUnidadesxMedicamento(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarUnidadesxMedicamento", ReplyAction="http://tempuri.org/ITransaccion/ListarUnidadesxMedicamentoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> ListarUnidadesxMedicamentoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarTodosMedicamentos", ReplyAction="http://tempuri.org/ITransaccion/ListarTodosMedicamentosResponse")]
        CrylDesktop.CrylService.Medicamento[] ListarTodosMedicamentos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarTodosMedicamentos", ReplyAction="http://tempuri.org/ITransaccion/ListarTodosMedicamentosResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento[]> ListarTodosMedicamentosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerMedicamentos", ReplyAction="http://tempuri.org/ITransaccion/ObtenerMedicamentosResponse")]
        CrylDesktop.CrylService.Medicamento ObtenerMedicamentos(int CodMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerMedicamentos", ReplyAction="http://tempuri.org/ITransaccion/ObtenerMedicamentosResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> ObtenerMedicamentosAsync(int CodMedicamento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarPedido", ReplyAction="http://tempuri.org/ITransaccion/ListarPedidoResponse")]
        CrylDesktop.CrylService.Pedido[] ListarPedido();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarPedido", ReplyAction="http://tempuri.org/ITransaccion/ListarPedidoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Pedido[]> ListarPedidoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearPedido", ReplyAction="http://tempuri.org/ITransaccion/CrearPedidoResponse")]
        bool CrearPedido(CrylDesktop.CrylService.Pedido nuevoPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearPedido", ReplyAction="http://tempuri.org/ITransaccion/CrearPedidoResponse")]
        System.Threading.Tasks.Task<bool> CrearPedidoAsync(CrylDesktop.CrylService.Pedido nuevoPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerPedido", ReplyAction="http://tempuri.org/ITransaccion/ObtenerPedidoResponse")]
        CrylDesktop.CrylService.Pedido ObtenerPedido(string NroPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ObtenerPedido", ReplyAction="http://tempuri.org/ITransaccion/ObtenerPedidoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.Pedido> ObtenerPedidoAsync(string NroPedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearDetallePedido", ReplyAction="http://tempuri.org/ITransaccion/CrearDetallePedidoResponse")]
        bool CrearDetallePedido(CrylDesktop.CrylService.DetallePedido nuevoDetallePedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/CrearDetallePedido", ReplyAction="http://tempuri.org/ITransaccion/CrearDetallePedidoResponse")]
        System.Threading.Tasks.Task<bool> CrearDetallePedidoAsync(CrylDesktop.CrylService.DetallePedido nuevoDetallePedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarxPedido", ReplyAction="http://tempuri.org/ITransaccion/ListarxPedidoResponse")]
        CrylDesktop.CrylService.DetallePedido[] ListarxPedido(string idpedido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransaccion/ListarxPedido", ReplyAction="http://tempuri.org/ITransaccion/ListarxPedidoResponse")]
        System.Threading.Tasks.Task<CrylDesktop.CrylService.DetallePedido[]> ListarxPedidoAsync(string idpedido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransaccionChannel : CrylDesktop.CrylService.ITransaccion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransaccionClient : System.ServiceModel.ClientBase<CrylDesktop.CrylService.ITransaccion>, CrylDesktop.CrylService.ITransaccion {
        
        public TransaccionClient() {
        }
        
        public TransaccionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransaccionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransaccionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransaccionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CrylDesktop.CrylService.Cliente CrearCliente(CrylDesktop.CrylService.Cliente nuevoCliente) {
            return base.Channel.CrearCliente(nuevoCliente);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> CrearClienteAsync(CrylDesktop.CrylService.Cliente nuevoCliente) {
            return base.Channel.CrearClienteAsync(nuevoCliente);
        }
        
        public CrylDesktop.CrylService.Cliente[] ListarCliente() {
            return base.Channel.ListarCliente();
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente[]> ListarClienteAsync() {
            return base.Channel.ListarClienteAsync();
        }
        
        public CrylDesktop.CrylService.Cliente ModificarCliente(CrylDesktop.CrylService.Cliente clienteModificar) {
            return base.Channel.ModificarCliente(clienteModificar);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> ModificarClienteAsync(CrylDesktop.CrylService.Cliente clienteModificar) {
            return base.Channel.ModificarClienteAsync(clienteModificar);
        }
        
        public CrylDesktop.CrylService.Cliente ObtenerCliente(int CodCliente) {
            return base.Channel.ObtenerCliente(CodCliente);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> ObtenerClienteAsync(int CodCliente) {
            return base.Channel.ObtenerClienteAsync(CodCliente);
        }
        
        public CrylDesktop.CrylService.Cliente BuscarCliente(CrylDesktop.CrylService.Cliente clien) {
            return base.Channel.BuscarCliente(clien);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Cliente> BuscarClienteAsync(CrylDesktop.CrylService.Cliente clien) {
            return base.Channel.BuscarClienteAsync(clien);
        }
        
        public bool IniciarSesion(CrylDesktop.CrylService.Cliente clien) {
            return base.Channel.IniciarSesion(clien);
        }
        
        public System.Threading.Tasks.Task<bool> IniciarSesionAsync(CrylDesktop.CrylService.Cliente clien) {
            return base.Channel.IniciarSesionAsync(clien);
        }
        
        public CrylDesktop.CrylService.Empleado CrearEmpleado(CrylDesktop.CrylService.Empleado nuevoEmpleado) {
            return base.Channel.CrearEmpleado(nuevoEmpleado);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado> CrearEmpleadoAsync(CrylDesktop.CrylService.Empleado nuevoEmpleado) {
            return base.Channel.CrearEmpleadoAsync(nuevoEmpleado);
        }
        
        public CrylDesktop.CrylService.Empleado[] ListarEmpleado() {
            return base.Channel.ListarEmpleado();
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado[]> ListarEmpleadoAsync() {
            return base.Channel.ListarEmpleadoAsync();
        }
        
        public CrylDesktop.CrylService.Empleado ModificarEmpleado(CrylDesktop.CrylService.Empleado empleadoModificar) {
            return base.Channel.ModificarEmpleado(empleadoModificar);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado> ModificarEmpleadoAsync(CrylDesktop.CrylService.Empleado empleadoModificar) {
            return base.Channel.ModificarEmpleadoAsync(empleadoModificar);
        }
        
        public CrylDesktop.CrylService.Empleado ObtenerEmpleado(int CodEmpleado) {
            return base.Channel.ObtenerEmpleado(CodEmpleado);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Empleado> ObtenerEmpleadoAsync(int CodEmpleado) {
            return base.Channel.ObtenerEmpleadoAsync(CodEmpleado);
        }
        
        public CrylDesktop.CrylService.Medicamento CrearMedicamento(CrylDesktop.CrylService.Medicamento nuevoMedicamento) {
            return base.Channel.CrearMedicamento(nuevoMedicamento);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> CrearMedicamentoAsync(CrylDesktop.CrylService.Medicamento nuevoMedicamento) {
            return base.Channel.CrearMedicamentoAsync(nuevoMedicamento);
        }
        
        public CrylDesktop.CrylService.Medicamento[] ListarMedicamento() {
            return base.Channel.ListarMedicamento();
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento[]> ListarMedicamentoAsync() {
            return base.Channel.ListarMedicamentoAsync();
        }
        
        public CrylDesktop.CrylService.Medicamento ModificarMedicamento(CrylDesktop.CrylService.Medicamento medicamentoModificar) {
            return base.Channel.ModificarMedicamento(medicamentoModificar);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> ModificarMedicamentoAsync(CrylDesktop.CrylService.Medicamento medicamentoModificar) {
            return base.Channel.ModificarMedicamentoAsync(medicamentoModificar);
        }
        
        public CrylDesktop.CrylService.Medicamento ListarUnidadesxMedicamento(int id) {
            return base.Channel.ListarUnidadesxMedicamento(id);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> ListarUnidadesxMedicamentoAsync(int id) {
            return base.Channel.ListarUnidadesxMedicamentoAsync(id);
        }
        
        public CrylDesktop.CrylService.Medicamento[] ListarTodosMedicamentos() {
            return base.Channel.ListarTodosMedicamentos();
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento[]> ListarTodosMedicamentosAsync() {
            return base.Channel.ListarTodosMedicamentosAsync();
        }
        
        public CrylDesktop.CrylService.Medicamento ObtenerMedicamentos(int CodMedicamento) {
            return base.Channel.ObtenerMedicamentos(CodMedicamento);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Medicamento> ObtenerMedicamentosAsync(int CodMedicamento) {
            return base.Channel.ObtenerMedicamentosAsync(CodMedicamento);
        }
        
        public CrylDesktop.CrylService.Pedido[] ListarPedido() {
            return base.Channel.ListarPedido();
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Pedido[]> ListarPedidoAsync() {
            return base.Channel.ListarPedidoAsync();
        }
        
        public bool CrearPedido(CrylDesktop.CrylService.Pedido nuevoPedido) {
            return base.Channel.CrearPedido(nuevoPedido);
        }
        
        public System.Threading.Tasks.Task<bool> CrearPedidoAsync(CrylDesktop.CrylService.Pedido nuevoPedido) {
            return base.Channel.CrearPedidoAsync(nuevoPedido);
        }
        
        public CrylDesktop.CrylService.Pedido ObtenerPedido(string NroPedido) {
            return base.Channel.ObtenerPedido(NroPedido);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.Pedido> ObtenerPedidoAsync(string NroPedido) {
            return base.Channel.ObtenerPedidoAsync(NroPedido);
        }
        
        public bool CrearDetallePedido(CrylDesktop.CrylService.DetallePedido nuevoDetallePedido) {
            return base.Channel.CrearDetallePedido(nuevoDetallePedido);
        }
        
        public System.Threading.Tasks.Task<bool> CrearDetallePedidoAsync(CrylDesktop.CrylService.DetallePedido nuevoDetallePedido) {
            return base.Channel.CrearDetallePedidoAsync(nuevoDetallePedido);
        }
        
        public CrylDesktop.CrylService.DetallePedido[] ListarxPedido(string idpedido) {
            return base.Channel.ListarxPedido(idpedido);
        }
        
        public System.Threading.Tasks.Task<CrylDesktop.CrylService.DetallePedido[]> ListarxPedidoAsync(string idpedido) {
            return base.Channel.ListarxPedidoAsync(idpedido);
        }
    }
}
